{"uid":"e8dbc33f51d7d049","name":"Visual check of the Home page after burger button click","fullName":"Tests.test_VisualTests.TestVisual#test_3","historyId":"f351905492f20e257d3c84933f640453","time":{"start":1728035321068,"stop":1728035323394,"duration":2326},"status":"broken","statusMessage":"ValueError: ('Image sizes do not match.', 13537280, 3650560)","statusTrace":"self = <Tests.test_VisualTests.TestVisual object at 0x7f567d1bab10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"98183c85340254b1f047de230966c6e2\")>\n\n    @severity(severity_level.NORMAL)\n    @allure.feature('Home page')\n    @allure.title(\"Visual check of the Home page after burger button click\")\n    def test_3(self, driver):\n        home_page_obj = HomePage(driver)\n        driver.refresh()\n        home_page_obj.click_burger_button()\n        time.sleep(1)\n>       visual_comparison(driver, \"home_page\", \"after_burger_button_click\")\n\nTests/test_VisualTests.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nCommon/VisualChack.py:26: in visual_comparison\n    mismatch = pixelmatch(reference_image, current_image, img_diff, includeAA=True)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/pixelmatch/contrib/PIL.py:52: in pixelmatch\n    diff_pixels = core.pixelmatch(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nimg1 = [255, 255, 255, 255, 255, 255, ...]\nimg2 = [255, 255, 255, 255, 255, 255, ...], width = 2560, height = 1322\noutput = [0, 0, 0, 0, 0, 0, ...], threshold = 0.1, includeAA = True, alpha = 0.1\naa_color = (255, 255, 0), diff_color = (255, 0, 0), diff_mask = False\nfail_fast = False\n\n    def pixelmatch(\n        img1: ImageSequence,\n        img2: ImageSequence,\n        width: int,\n        height: int,\n        output: Optional[MutableImageSequence] = None,\n        threshold: float = 0.1,\n        includeAA: bool = False,\n        alpha: float = 0.1,\n        aa_color: RGBTuple = (255, 255, 0),\n        diff_color: RGBTuple = (255, 0, 0),\n        diff_mask: bool = False,\n        fail_fast: bool = False,\n    ) -> int:\n        \"\"\"\n        Compares two images, writes the output diff and returns the number of mismatched pixels.\n        'Raw image data' refers to a 1D, indexable collection of image data in the\n        format [R1, G1, B1, A1, R2, G2, ...].\n    \n        :param img1: Image data to compare with img2. Must be the same size as img2\n        :param img2: Image data to compare with img2. Must be the same size as img1\n        :param width: Width of both images (they should be the same).\n        :param height: Height of both images (they should be the same).\n        :param output: Image data to write the diff to. Should be the same size as\n        :param threshold: matching threshold (0 to 1); smaller is more sensitive, defaults to 1\n        :param includeAA: whether or not to skip anti-aliasing detection, ie if includeAA is True,\n            detecting and ignoring anti-aliased pixels is disabled. Defaults to False\n        :param alpha: opacity of original image in diff output, defaults to 0.1\n        :param aa_color: tuple of RGB color of anti-aliased pixels in diff output,\n            defaults to (255, 255, 0) (yellow)\n        :param diff_color: tuple of RGB color of the color of different pixels in diff output,\n            defaults to (255, 0, 0) (red)\n        :param diff_mask: whether or not to draw the diff over a transparent background (a mask),\n            defaults to False\n        :param fail_fast: if true, will return after first different pixel. Defaults to false\n        :return: number of pixels that are different or 1 if fail_fast == true\n        \"\"\"\n    \n        if len(img1) != len(img2):\n>           raise ValueError(\"Image sizes do not match.\", len(img1), len(img2))\nE           ValueError: ('Image sizes do not match.', 13537280, 3650560)\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/pixelmatch/core.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_reporting_directories","time":{"start":1728035230573,"stop":1728035230576,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1728035317498,"stop":1728035317709,"duration":211},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"driver::0","time":{"start":1728035327450,"stop":1728035327517,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Home page"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_VisualTests"},{"name":"subSuite","value":"TestVisual"},{"name":"host","value":"fv-az1970-185"},{"name":"thread","value":"2411-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_VisualTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":6,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"7a465a52dfec6ce8","reportUrl":"https://Simeon-Zografov.github.io/test-repo/10//#testresult/7a465a52dfec6ce8","status":"failed","statusDetails":"AssertionError: \u001B[31mFAILURE: \u001B[0m\n\u001B[31mtest_VisualTests.py\u001B[0m:38 in test_3() -> \n\u001B[31mVisualChack.py\u001B[0m:27 in visual_comparison() -> with check, allure.step(f\"Visual check for {path} in {i} iteration\"):\n\u001B[31mVisualChack.py\u001B[0m:38 in visual_comparison -> assert mismatch == 0\n\u001B[31mAssertionError\n\u001B[0m\n\n\u001B[31mFAILURE: \u001B[0m\n------------------------------------------------------------\nFailed Checks: 2","time":{"start":1728024762260,"stop":1728024778377,"duration":16117}},{"uid":"e0222e035c21e9d7","reportUrl":"https://Simeon-Zografov.github.io/test-repo/9//#testresult/e0222e035c21e9d7","status":"broken","statusDetails":"ValueError: ('Image sizes do not match.', 13537280, 3650560)","time":{"start":1728033466585,"stop":1728033469085,"duration":2500}},{"uid":"62a415e3b4d6f601","reportUrl":"https://Simeon-Zografov.github.io/test-repo/5//#testresult/62a415e3b4d6f601","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to locate or obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location","time":{"start":1728032279025,"stop":1728032279025,"duration":0}},{"uid":"b18d6cbbaab1e060","reportUrl":"https://Simeon-Zografov.github.io/test-repo/4//#testresult/b18d6cbbaab1e060","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to locate or obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location","time":{"start":1728032017663,"stop":1728032017663,"duration":0}},{"uid":"70997273d8c4b1ea","reportUrl":"https://Simeon-Zografov.github.io/test-repo/3//#testresult/70997273d8c4b1ea","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to locate or obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location","time":{"start":1728031350195,"stop":1728031350195,"duration":0}},{"uid":"1ad7cc841ee0616","reportUrl":"https://Simeon-Zografov.github.io/test-repo/2//#testresult/1ad7cc841ee0616","status":"broken","statusDetails":"OSError: [Errno 8] Exec format error: '/home/runner/.wdm/drivers/chromedriver/linux64/129.0.6668.89/chromedriver-linux64/THIRD_PARTY_NOTICES.chromedriver'","time":{"start":1728030566017,"stop":1728030566017,"duration":0}},{"uid":"5104bd2538bc3335","status":"failed","statusDetails":"AssertionError: \u001B[31mFAILURE: \u001B[0m\n\u001B[31mtest_VisualTests.py\u001B[0m:38 in test_3() -> \n\u001B[31mVisualChack.py\u001B[0m:27 in visual_comparison() -> with check, allure.step(f\"Visual check for {path} in {i} iteration\"):\n\u001B[31mVisualChack.py\u001B[0m:38 in visual_comparison -> assert mismatch == 0\n\u001B[31mAssertionError\n\u001B[0m\n\n\u001B[31mFAILURE: \u001B[0m\n------------------------------------------------------------\nFailed Checks: 2","time":{"start":1728024762260,"stop":1728024778377,"duration":16117}}]},"tags":[]},"source":"e8dbc33f51d7d049.json","parameterValues":["'Chrome'"]}