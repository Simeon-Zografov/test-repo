{"uid":"bd0272b8a5f7e773","name":"Visual check of the broken Home page after burger button click","fullName":"Tests.test_VisualTests.TestVisual#test_5","historyId":"b82bcf19964e7e7b71a9c750614ceceb","time":{"start":1728031350216,"stop":1728031350216,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to locate or obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location","statusTrace":"self = <Tests.test_VisualTests.TestVisual object at 0x7f5c8e796310>\nrequest = <SubRequest 'driver' for <Function test_1[Chrome]>>\n\n    @pytest.fixture(scope=\"class\")\n    def driver(self, request):\n        browser = request.param\n    \n        project_folder = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n    \n        is_ci = os.getenv('CI') == 'true'\n        if is_ci:\n            if browser == \"Edge\":\n                # Set up Edge options\n                options = EdgeOptions()\n                options.add_argument(\"--headless\")\n                options.add_argument(\"--disable-gpu\")\n                options.add_argument(\"--window-size=1920,1080\")\n                options.add_argument(\"--no-sandbox\")\n                options.add_argument(\"--disable-dev-shm-usage\")\n                options.add_argument(\"--disable-extensions\")\n                options.add_argument(\"--disable-infobars\")\n                serv = EdgeService(EdgeChromiumDriverManager().install())\n                driver = webdriver.Edge(service=serv, options=options)\n            else:\n                chrome_service = ChromeService(executable_path='/usr/local/share/chrome_driver')\n    \n                options = ChromeOptions()\n                options.add_argument(\"--headless\")\n                options.add_argument(\"--disable-gpu\")\n                options.add_argument(\"--window-size=1920,1080\")\n                options.add_argument(\"--no-sandbox\")\n                options.add_argument(\"--disable-dev-shm-usage\")\n                options.add_argument(\"--disable-extensions\")\n                options.add_argument(\"--disable-infobars\")\n                serv = ChromeService(ChromeDriverManager().install())\n>               driver = webdriver.Chrome(service=chrome_service, options=options)\n\nCommon/BaseClass.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:49: in __init__\n    self.service.path = DriverFinder.get_path(self.service, options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nservice = <selenium.webdriver.chrome.service.Service object at 0x7f5c8dfe2190>\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f5c8dfe2910>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = service.path\n        try:\n            path = SeleniumManager().driver_location(options) if path is None else path\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {options.capabilities['browserName']} using Selenium Manager.\"\n            raise NoSuchDriverException(msg) from err\n    \n        if path is None or not Path(path).is_file():\n>           raise NoSuchDriverException(f\"Unable to locate or obtain driver for {options.capabilities['browserName']}\")\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to locate or obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/common/driver_finder.py:44: NoSuchDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_reporting_directories","time":{"start":1728031263930,"stop":1728031263933,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1728031350044,"stop":1728031350178,"duration":134},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to locate or obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 906, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/test-repo/test-repo/Common/BaseClass.py\", line 66, in driver\n    driver = webdriver.Chrome(service=chrome_service, options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 49, in __init__\n    self.service.path = DriverFinder.get_path(self.service, options)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/common/driver_finder.py\", line 44, in get_path\n    raise NoSuchDriverException(f\"Unable to locate or obtain driver for {options.capabilities['browserName']}\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Home page"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_VisualTests"},{"name":"subSuite","value":"TestVisual"},{"name":"host","value":"fv-az1928-263"},{"name":"thread","value":"2344-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_VisualTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"4913eac0d0a2bc7b","reportUrl":"https://Simeon-Zografov.github.io/test-repo/2//#testresult/4913eac0d0a2bc7b","status":"broken","statusDetails":"OSError: [Errno 8] Exec format error: '/home/runner/.wdm/drivers/chromedriver/linux64/129.0.6668.89/chromedriver-linux64/THIRD_PARTY_NOTICES.chromedriver'","time":{"start":1728030566112,"stop":1728030566112,"duration":0}},{"uid":"351838a12d538582","status":"failed","statusDetails":"AssertionError: \u001B[31mFAILURE: \u001B[0m\n\u001B[31mtest_VisualTests.py\u001B[0m:58 in test_5() -> \n\u001B[31mVisualChack.py\u001B[0m:27 in visual_comparison() -> with check, allure.step(f\"Visual check for {path} in {i} iteration\"):\n\u001B[31mVisualChack.py\u001B[0m:38 in visual_comparison -> assert mismatch == 0\n\u001B[31mAssertionError\n\u001B[0m\n\n\u001B[31mFAILURE: \u001B[0m\n------------------------------------------------------------\nFailed Checks: 2","time":{"start":1728024793535,"stop":1728024808533,"duration":14998}}]},"tags":[]},"source":"bd0272b8a5f7e773.json","parameterValues":["'Chrome'"]}