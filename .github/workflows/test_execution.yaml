name: Run Selenium Tests and publish report

on:
  workflow_dispatch:
    inputs:
      browser_options:
        description: 'Select browser'
        required: true
        default: 'All'
        type: choice
        options:
          - 'All'
          - 'Chrome'
          - 'Edge'

      test_options:
        description: 'Select test options'
        required: true
        default: 'All'
        type: choice
        options:
          - 'All'
          - 'Accessibility'
          - 'Contacts'
          - 'Email'
          - 'Landing page'
          - 'Login'
          - 'Social Media'
          - 'Visual tests'

jobs:
  android-test:
    name: Run Selenium Tests
    runs-on: [ubuntu-latest]

    steps:
      - name: Set device variable
        run: |
          if [ "${{ github.event.inputs.browser_options }}" == "All" ]; then
            echo "BROWSERS=Chrome,Edge" >> "$GITHUB_ENV"
          elif [ "${{ github.event.inputs.browser_options }}" == "Chrome" ]; then
            echo "BROWSERS=Chrome" >> "$GITHUB_ENV"
          elif [ "${{ github.event.inputs.browser_options }}" == "Edge" ]; then
            echo "BROWSERS=Edge" >> "$GITHUB_ENV"
          else
              echo "Invalid option"
          fi

      - name: Checkout test repository
        uses: actions/checkout@v4
        with:
          repository: Simeon-Zografov/test-repo

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install allure
        run: |
          npm install -g allure-commandline

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
        working-directory: .

      - name: Run Selenium tests
        continue-on-error: true
        env:
          URL: ${{ vars.URL }}
          USERNAME: ${{ vars.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          BROWSERS: ${{ env.BROWSERS }}
          EMAIL: ${{ vars.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: |
          if [ "${{ github.event_name }}" == 'workflow_dispatch' ] && [ "${{ github.event.inputs.test_options }}" != 'All' ]; then
            if [ "${{ github.event.inputs.test_options }}" == 'Accessibility' ]; then
              pytest Tests/test_Accessibility.py
            elif [ "${{ github.event.inputs.test_options }}" == 'Contacts' ]; then
              pytest Tests/test_ContactList.py
            elif [ "${{ github.event.inputs.test_options }}" == 'Email' ]; then
              pytest Tests/test_EmailReader.py
            elif [ "${{ github.event.inputs.test_options }}" == 'Landing page' ]; then
              pytest Tests/test_LandingPage.py
            elif [ "${{ github.event.inputs.test_options }}" == 'Login' ]; then
              pytest Tests/test_Login.py
            elif [ "${{ github.event.inputs.test_options }}" == 'Social Media' ]; then
              pytest Tests/test_SocialMediaLinks.py
            elif [ "${{ github.event.inputs.test_options }}" == 'Visual tests' ]; then
              pytest Tests/test_VisualTests.py
            else
              echo "Invalid option"
            fi
          else
            pytest
          fi
        working-directory: .

        # Step 1: Push report to the `main` branch to save execution history
      - name: Commit and push report to main
        if: always()
        continue-on-error: true
        run: |
         git config --local user.name "github-actions[bot]"
         git config --local user.email "github-actions[bot]@users.noreply.github.com"
         git checkout main
         git add allure-report/
         git commit -m "Add test report from workflow run"
         git push origin main
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # Step 2: Push the same report to the `gh-pages` branch to publish
        #  || git checkout gh-pages
      - name: Commit and push report to gh-pages
        if: always()
        continue-on-error: true
        run: |
           git config --local user.name "github-actions[bot]"
           git config --local user.email "github-actions[bot]@users.noreply.github.com"
           git checkout -b gh-pages
           git add allure-report/
           git commit -m "Update test report for GitHub Pages"
           git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Load test report history
#        uses: actions/checkout@v4
#        if: always()
#        continue-on-error: true
#        with:
#          ref: gh-pages
#          path: gh-pages
#
#      - name: Build test report
#        uses: simple-elf/allure-report-action@v1.9
#        if: always()
#        with:
#          gh_pages: gh-pages
#          allure_history: allure-history
#          allure_results: allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report
